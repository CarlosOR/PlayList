// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayListProject.Domain.Context;

#nullable disable

namespace PlayListProject.Domain.Migrations
{
    [DbContext(typeof(PlayListProjectDbContext))]
    partial class PlayListProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("PlayListProject.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.PlayListSong", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SongId", "PlayListId");

                    b.HasIndex("PlayListId");

                    b.ToTable("PlayListSong");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.PlayListSong", b =>
                {
                    b.HasOne("PlayListProject.Domain.Entities.PlayList", "PlayList")
                        .WithMany("PlayListSongs")
                        .HasForeignKey("PlayListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayListProject.Domain.Entities.Song", "Song")
                        .WithMany("PlayListSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayList");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.Song", b =>
                {
                    b.HasOne("PlayListProject.Domain.Entities.Author", "Author")
                        .WithMany("Songs")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.Author", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.PlayList", b =>
                {
                    b.Navigation("PlayListSongs");
                });

            modelBuilder.Entity("PlayListProject.Domain.Entities.Song", b =>
                {
                    b.Navigation("PlayListSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
